{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar container = document.querySelector('.container');\nvar seats = document.querySelectorAll('.row .seat:not(.occupied)');\nvar count = document.getElementById('count');\nvar price = document.getElementById('price');\nvar movieSelect = document.getElementById('movie');\nvar ticketPrice = +movieSelect.value;\n\nvar populateUI = function populateUI() {\n  var bookedSeats = JSON.parse($(\"#booked-seats\").val());\n\n  if (bookedSeats !== null && bookedSeats.length > 0) {\n    seats.forEach(function (seat, index) {\n      if (bookedSeats.indexOf(index) > -1) {\n        seat.classList.add('occupied');\n      }\n    });\n  } // const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\n  // const selectedMoviePrice = localStorage.getItem('selectedMoviePrice');\n  // if (selectedMovieIndex !== null) {\n  //   movieSelect.selectedIndex = selectedMovieIndex;\n  // }\n  // if (selectedMoviePrice !== null) {\n  //   count.innerText = selectedSeats.length;\n  //   price.innerText = selectedSeats.length * +selectedMoviePrice;\n  // }\n\n};\n\npopulateUI();\n\nselectedMovie = function selectedMovie(movieIndex, moviePrice) {\n  localStorage.setItem('selectedMovieIndex', movieIndex);\n  localStorage.setItem('selectedMoviePrice', moviePrice);\n};\n\nvar updateSelectedSeatsCount = function updateSelectedSeatsCount() {\n  var selectedSeats = document.querySelectorAll('.row .selected');\n\n  var seatsIndex = _toConsumableArray(selectedSeats).map(function (seat) {\n    return _toConsumableArray(seats).indexOf(seat);\n  });\n\n  localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\n  var selectedSeatsCount = selectedSeats.length;\n  count.innerText = selectedSeatsCount;\n  price.innerText = selectedSeatsCount * ticketPrice;\n}; // Seat select event\n\n\ncontainer.addEventListener('click', function (e) {\n  if (e.target.classList.contains('seat') && !e.target.classList.contains('occupied')) {\n    e.target.classList.toggle('selected');\n    updateSelectedSeatsCount();\n  }\n}); // Movie select event\n\nmovieSelect.addEventListener('change', function (e) {\n  ticketPrice = +e.target.value;\n  selectedMovie(e.target.selectedIndex, e.target.value);\n  updateSelectedSeatsCount();\n});\n$('#book-seat').on('click', function () {\n  updateSelectedSeatsCount();\n  var selectedMoviePrice = document.getElementById('movie').value,\n      selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\n  var confirmBox = confirm(\"You have selected \".concat(selectedSeats.length, \" seats for a price of \").concat(selectedSeats.length * selectedMoviePrice));\n\n  if (confirmBox == true) {\n    var formData = {\n      \"seats\": localStorage.selectedSeats,\n      \"screening_id\": $(\"#screening-id\").val()\n    };\n    $.ajax({\n      url: '/bookings',\n      method: 'POST',\n      beforeSend: function beforeSend(xhr) {\n        xhr.setRequestHeader('X-CSRF-Token', $('meta[name=\"csrf-token\"]').attr('content'));\n      },\n      data: formData\n    });\n  } else {\n    alert(\"you pressed Cancel\");\n  }\n});","map":{"version":3,"sources":["/home/girish/Documents/Projects/simple-movie-booking/app/javascript/packs/booking.js"],"names":["container","document","querySelector","seats","querySelectorAll","count","getElementById","price","movieSelect","ticketPrice","value","populateUI","bookedSeats","JSON","parse","$","val","length","forEach","seat","index","indexOf","classList","add","selectedMovie","movieIndex","moviePrice","localStorage","setItem","updateSelectedSeatsCount","selectedSeats","seatsIndex","map","stringify","selectedSeatsCount","innerText","addEventListener","e","target","contains","toggle","selectedIndex","on","selectedMoviePrice","getItem","confirmBox","confirm","formData","ajax","url","method","beforeSend","xhr","setRequestHeader","attr","data","alert"],"mappings":"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","sourcesContent":["const container = document.querySelector('.container');\nconst seats = document.querySelectorAll('.row .seat:not(.occupied)');\nconst count = document.getElementById('count');\nconst price = document.getElementById('price');\n\nconst movieSelect = document.getElementById('movie');\nlet ticketPrice = +movieSelect.value;\n\nconst populateUI = () => {\n  const bookedSeats = JSON.parse($(\"#booked-seats\").val());\n  if (bookedSeats !== null && bookedSeats.length > 0) {\n    seats.forEach((seat, index) => {\n      if (bookedSeats.indexOf(index) > -1) {\n        seat.classList.add('occupied');\n      }\n    });\n  }\n\n  // const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\n  // const selectedMoviePrice = localStorage.getItem('selectedMoviePrice');\n\n  // if (selectedMovieIndex !== null) {\n  //   movieSelect.selectedIndex = selectedMovieIndex;\n  // }\n\n  // if (selectedMoviePrice !== null) {\n  //   count.innerText = selectedSeats.length;\n  //   price.innerText = selectedSeats.length * +selectedMoviePrice;\n  // }\n};\n\npopulateUI();\n\nselectedMovie = (movieIndex, moviePrice) => {\n  localStorage.setItem('selectedMovieIndex', movieIndex);\n  localStorage.setItem('selectedMoviePrice', moviePrice);\n};\n\nconst updateSelectedSeatsCount = () => {\n  const selectedSeats = document.querySelectorAll('.row .selected');\n\n  const seatsIndex = [...selectedSeats].map(seat => [...seats].indexOf(seat));\n\n  localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\n\n  const selectedSeatsCount = selectedSeats.length;\n\n  count.innerText = selectedSeatsCount;\n  price.innerText = selectedSeatsCount * ticketPrice;\n};\n\n// Seat select event\ncontainer.addEventListener('click', e => {\n  if (\n    e.target.classList.contains('seat') &&\n    !e.target.classList.contains('occupied')\n  ) {\n    e.target.classList.toggle('selected');\n\n    updateSelectedSeatsCount();\n  }\n});\n\n// Movie select event\nmovieSelect.addEventListener('change', e => {\n  ticketPrice = +e.target.value;\n  selectedMovie(e.target.selectedIndex, e.target.value);\n\n  updateSelectedSeatsCount();\n});\n\n$('#book-seat').on('click', function(){\n  updateSelectedSeatsCount();\n  const selectedMoviePrice = document.getElementById('movie').value,\n        selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\n  let confirmBox = confirm(`You have selected ${selectedSeats.length} seats for a price of ${selectedSeats.length * selectedMoviePrice}`);\n  if (confirmBox == true) {\n    let  formData = {\n          \"seats\": localStorage.selectedSeats,\n          \"screening_id\": $(\"#screening-id\").val(),\n      };\n    $.ajax({\n      url: '/bookings',\n      method: 'POST',\n      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name=\"csrf-token\"]').attr('content'))},\n      data: formData,\n    });\n  } else {\n    alert(\"you pressed Cancel\")\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}