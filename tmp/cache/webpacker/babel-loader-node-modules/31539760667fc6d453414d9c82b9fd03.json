{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar container = document.querySelector('.container');\nvar seats = document.querySelectorAll('.row .seat:not(.occupied)');\nvar count = document.getElementById('count');\nvar price = document.getElementById('price');\nvar movieSelect = document.getElementById('movie');\nvar ticketPrice = +movieSelect.value;\n\nvar populateUI = function populateUI() {\n  var selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\n\n  if (selectedSeats !== null && selectedSeats.length > 0) {\n    seats.forEach(function (seat, index) {\n      if (selectedSeats.indexOf(index) > -1) {\n        seat.classList.add('selected');\n      }\n    });\n  }\n\n  var selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\n  var selectedMoviePrice = localStorage.getItem('selectedMoviePrice');\n\n  if (selectedMovieIndex !== null) {\n    movieSelect.selectedIndex = selectedMovieIndex;\n  }\n\n  if (selectedMoviePrice !== null) {\n    count.innerText = selectedSeats.length;\n    price.innerText = selectedSeats.length * +selectedMoviePrice;\n  }\n}; // populateUI();\n\n\nselectedMovie = function selectedMovie(movieIndex, moviePrice) {\n  localStorage.setItem('selectedMovieIndex', movieIndex);\n  localStorage.setItem('selectedMoviePrice', moviePrice);\n};\n\nvar updateSelectedSeatsCount = function updateSelectedSeatsCount() {\n  var selectedSeats = document.querySelectorAll('.row .selected');\n\n  var seatsIndex = _toConsumableArray(selectedSeats).map(function (seat) {\n    return _toConsumableArray(seats).indexOf(seat);\n  });\n\n  localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\n  var selectedSeatsCount = selectedSeats.length;\n  count.innerText = selectedSeatsCount;\n  price.innerText = selectedSeatsCount * ticketPrice;\n}; // Seat select event\n\n\ncontainer.addEventListener('click', function (e) {\n  if (e.target.classList.contains('seat') && !e.target.classList.contains('occupied')) {\n    e.target.classList.toggle('selected');\n    updateSelectedSeatsCount();\n  }\n}); // Movie select event\n\nmovieSelect.addEventListener('change', function (e) {\n  ticketPrice = +e.target.value;\n  selectedMovie(e.target.selectedIndex, e.target.value);\n  updateSelectedSeatsCount();\n});\n$('#book-seat').on('click', function () {\n  debugger;\n});","map":{"version":3,"sources":["/home/girish/Documents/Projects/simple-movie-booking/app/javascript/packs/booking.js"],"names":["container","document","querySelector","seats","querySelectorAll","count","getElementById","price","movieSelect","ticketPrice","value","populateUI","selectedSeats","JSON","parse","localStorage","getItem","length","forEach","seat","index","indexOf","classList","add","selectedMovieIndex","selectedMoviePrice","selectedIndex","innerText","selectedMovie","movieIndex","moviePrice","setItem","updateSelectedSeatsCount","seatsIndex","map","stringify","selectedSeatsCount","addEventListener","e","target","contains","toggle","$","on"],"mappings":"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","sourcesContent":["const container = document.querySelector('.container');\nconst seats = document.querySelectorAll('.row .seat:not(.occupied)');\nconst count = document.getElementById('count');\nconst price = document.getElementById('price');\n\nconst movieSelect = document.getElementById('movie');\nlet ticketPrice = +movieSelect.value;\n\nconst populateUI = () => {\n  const selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\n\n  if (selectedSeats !== null && selectedSeats.length > 0) {\n    seats.forEach((seat, index) => {\n      if (selectedSeats.indexOf(index) > -1) {\n        seat.classList.add('selected');\n      }\n    });\n  }\n\n  const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\n  const selectedMoviePrice = localStorage.getItem('selectedMoviePrice');\n\n  if (selectedMovieIndex !== null) {\n    movieSelect.selectedIndex = selectedMovieIndex;\n  }\n\n  if (selectedMoviePrice !== null) {\n    count.innerText = selectedSeats.length;\n    price.innerText = selectedSeats.length * +selectedMoviePrice;\n  }\n};\n\n// populateUI();\n\nselectedMovie = (movieIndex, moviePrice) => {\n  localStorage.setItem('selectedMovieIndex', movieIndex);\n  localStorage.setItem('selectedMoviePrice', moviePrice);\n};\n\nconst updateSelectedSeatsCount = () => {\n  const selectedSeats = document.querySelectorAll('.row .selected');\n\n  const seatsIndex = [...selectedSeats].map(seat => [...seats].indexOf(seat));\n\n  localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\n\n  const selectedSeatsCount = selectedSeats.length;\n\n  count.innerText = selectedSeatsCount;\n  price.innerText = selectedSeatsCount * ticketPrice;\n};\n\n// Seat select event\ncontainer.addEventListener('click', e => {\n  if (\n    e.target.classList.contains('seat') &&\n    !e.target.classList.contains('occupied')\n  ) {\n    e.target.classList.toggle('selected');\n\n    updateSelectedSeatsCount();\n  }\n});\n\n// Movie select event\nmovieSelect.addEventListener('change', e => {\n  ticketPrice = +e.target.value;\n  selectedMovie(e.target.selectedIndex, e.target.value);\n\n  updateSelectedSeatsCount();\n});\n\n$('#book-seat').on('click', function(){\n  debugger\n});\n\n"]},"metadata":{},"sourceType":"module"}